<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.webproject.mapper.FinandetailMapper" >
  <resultMap id="BaseResultMap" type="com.webproject.entity.Finandetail" >
    <id column="finandetailid" property="finandetailid" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="financialid" property="financialid" jdbcType="VARCHAR" />
    <result column="monery" property="monery" jdbcType="INTEGER" />
    <result column="descname" property="descname" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="payexpertid" property="payexpertid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    finandetailid, userid, financialid, monery, descname, createtime, state, payexpertid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.webproject.entity.FinandetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from finandetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from finandetail
    where finandetailid = #{finandetailid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from finandetail
    where finandetailid = #{finandetailid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.webproject.entity.FinandetailExample" >
    delete from finandetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.webproject.entity.Finandetail" >
    insert into finandetail (finandetailid, userid, financialid, 
      monery, descname, createtime, 
      state, payexpertid)
    values (#{finandetailid,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{financialid,jdbcType=VARCHAR}, 
      #{monery,jdbcType=INTEGER}, #{descname,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{payexpertid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.webproject.entity.Finandetail" >
    insert into finandetail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="finandetailid != null" >
        finandetailid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="financialid != null" >
        financialid,
      </if>
      <if test="monery != null" >
        monery,
      </if>
      <if test="descname != null" >
        descname,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="payexpertid != null" >
        payexpertid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="finandetailid != null" >
        #{finandetailid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="financialid != null" >
        #{financialid,jdbcType=VARCHAR},
      </if>
      <if test="monery != null" >
        #{monery,jdbcType=INTEGER},
      </if>
      <if test="descname != null" >
        #{descname,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="payexpertid != null" >
        #{payexpertid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.webproject.entity.FinandetailExample" resultType="java.lang.Integer" >
    select count(*) from finandetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update finandetail
    <set >
      <if test="record.finandetailid != null" >
        finandetailid = #{record.finandetailid,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.financialid != null" >
        financialid = #{record.financialid,jdbcType=VARCHAR},
      </if>
      <if test="record.monery != null" >
        monery = #{record.monery,jdbcType=INTEGER},
      </if>
      <if test="record.descname != null" >
        descname = #{record.descname,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.payexpertid != null" >
        payexpertid = #{record.payexpertid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update finandetail
    set finandetailid = #{record.finandetailid,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=VARCHAR},
      financialid = #{record.financialid,jdbcType=VARCHAR},
      monery = #{record.monery,jdbcType=INTEGER},
      descname = #{record.descname,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      payexpertid = #{record.payexpertid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.webproject.entity.Finandetail" >
    update finandetail
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="financialid != null" >
        financialid = #{financialid,jdbcType=VARCHAR},
      </if>
      <if test="monery != null" >
        monery = #{monery,jdbcType=INTEGER},
      </if>
      <if test="descname != null" >
        descname = #{descname,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="payexpertid != null" >
        payexpertid = #{payexpertid,jdbcType=VARCHAR},
      </if>
    </set>
    where finandetailid = #{finandetailid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.webproject.entity.Finandetail" >
    update finandetail
    set userid = #{userid,jdbcType=VARCHAR},
      financialid = #{financialid,jdbcType=VARCHAR},
      monery = #{monery,jdbcType=INTEGER},
      descname = #{descname,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      payexpertid = #{payexpertid,jdbcType=VARCHAR}
    where finandetailid = #{finandetailid,jdbcType=VARCHAR}
  </update>
</mapper>